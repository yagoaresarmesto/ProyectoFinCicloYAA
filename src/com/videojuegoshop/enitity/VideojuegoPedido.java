package com.videojuegoshop.enitity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;

/**
 * VideojuegoPedido generated by hbm2java
 */

@Entity
@Table(name = "videojuego_pedido", catalog = "videogameshopyaa")
@NamedQueries({
		@NamedQuery(name = "VideojuegoPedido.findAll", query = "SELECT vp FROM VideojuegoPedido vp ORDER BY vp.fechaPedido DESC"),
		@NamedQuery(name = "VideojuegoPedido.countAll", query = "SELECT COUNT(*) FROM VideojuegoPedido"),
		@NamedQuery(name = "VideojuegoPedido.findByCustomer", query = "SELECT vp FROM VideojuegoPedido vp WHERE vp.cliente.clienteId =:clienteId"),
		@NamedQuery(name = "VideojuegoPedido.findByIdAndCustomer", query = "SELECT vp FROM VideojuegoPedido vp WHERE vp.pedidoId =:pedidoId AND vp.cliente.clienteId =:clienteId") })
public class VideojuegoPedido implements java.io.Serializable {

	private Integer pedidoId;
	private Cliente cliente;
	private Date fechaPedido;
	private String direccionEnvio;
	private String nombreDestinatario;
	private String telefonoDestinatario;
	private String metodoPago;
	private float total;
	private String estadoPedido;
	private Set<DetallesPedido> detallesPedidos = new HashSet<DetallesPedido>(0);

	public VideojuegoPedido() {
	}
	
	public VideojuegoPedido(Cliente cliente, Date fechaPedido, String direccionEnvio, String nombreDestinatario,
			String telefonoDestinatario, String metodoPago, float total, String estadoPedido) {
		this.cliente = cliente;
		this.fechaPedido = fechaPedido;
		this.direccionEnvio = direccionEnvio;
		this.nombreDestinatario = nombreDestinatario;
		this.telefonoDestinatario = telefonoDestinatario;
		this.metodoPago = metodoPago;
		this.total = total;
		this.estadoPedido = estadoPedido;
	}

	public VideojuegoPedido(Cliente cliente, Date fechaPedido, String direccionEnvio, String nombreDestinatario,
			String telefonoDestinatario, String metodoPago, float total, String estadoPedido,
			Set<DetallesPedido> detallesPedidos) {
		this.cliente = cliente;
		this.fechaPedido = fechaPedido;
		this.direccionEnvio = direccionEnvio;
		this.nombreDestinatario = nombreDestinatario;
		this.telefonoDestinatario = telefonoDestinatario;
		this.metodoPago = metodoPago;
		this.total = total;
		this.estadoPedido = estadoPedido;
		this.detallesPedidos = detallesPedidos;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "pedido_id", unique = true, nullable = false)
	public Integer getPedidoId() {
		return this.pedidoId;
	}

	public void setPedidoId(Integer pedidoId) {
		this.pedidoId = pedidoId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cliente_id", nullable = false)
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_pedido", nullable = false, length = 19)
	public Date getFechaPedido() {
		return this.fechaPedido;
	}

	public void setFechaPedido(Date fechaPedido) {
		this.fechaPedido = fechaPedido;
	}

	@Column(name = "direccion_envio", nullable = false, length = 256)
	public String getDireccionEnvio() {
		return this.direccionEnvio;
	}

	public void setDireccionEnvio(String direccionEnvio) {
		this.direccionEnvio = direccionEnvio;
	}

	@Column(name = "nombre_destinatario", nullable = false, length = 30)
	public String getNombreDestinatario() {
		return this.nombreDestinatario;
	}

	public void setNombreDestinatario(String nombreDestinatario) {
		this.nombreDestinatario = nombreDestinatario;
	}

	@Column(name = "telefono_destinatario", nullable = false, length = 15)
	public String getTelefonoDestinatario() {
		return this.telefonoDestinatario;
	}

	public void setTelefonoDestinatario(String telefonoDestinatario) {
		this.telefonoDestinatario = telefonoDestinatario;
	}

	@Column(name = "metodo_pago", nullable = false, length = 20)
	public String getMetodoPago() {
		return this.metodoPago;
	}

	public void setMetodoPago(String metodoPago) {
		this.metodoPago = metodoPago;
	}

	@Column(name = "total", nullable = false, precision = 12, scale = 0)
	public float getTotal() {
		return this.total;
	}

	public void setTotal(float total) {
		this.total = total;
	}

	@Column(name = "estado_pedido", nullable = false, length = 20)
	public String getEstadoPedido() {
		return this.estadoPedido;
	}

	public void setEstadoPedido(String estadoPedido) {
		this.estadoPedido = estadoPedido;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "videojuegoPedido", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<DetallesPedido> getDetallesPedidos() {
		return this.detallesPedidos;
	}

	public void setDetallesPedidos(Set<DetallesPedido> detallesPedidos) {
		this.detallesPedidos = detallesPedidos;
	}

	@Transient
	public int getVideogameCopies() {
		int total = 0;

		for (DetallesPedido detallePedido : detallesPedidos) {
			total += detallePedido.getCantidad();
		}

		return total;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((pedidoId == null) ? 0 : pedidoId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		VideojuegoPedido other = (VideojuegoPedido) obj;
		if (pedidoId == null) {
			if (other.pedidoId != null)
				return false;
		} else if (!pedidoId.equals(other.pedidoId))
			return false;
		return true;
	}

}